{
  "swagger": "2.0",
  "info": {
    "title": "Bhagavad Gita API",
    "version": "1.0.0",
		"description": "Bhagavad Gita API Documentation"
  },
  "host": "http://localhost:3000", 
  "schemes": ["http"],
  "paths": {
    "/api/gita/": {
      "get": {
        "summary": "Get all BABs",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BAB"
              }
            }
          }
        },
				"security": [
					{
						"Bearer": []
					}
				]
      }
    },
    "/api/gita/bab/{bab}": {
      "get": {
        "summary": "Get BAB by id",
        "parameters": [
          {
            "name": "bab",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BAB"
            }
          }
        },
				"security": [
					{
						"Bearer": []
					}
				]
      }
    },
    "/api/gita/bab/{bab}/slokas": {
      "get": {
        "summary": "Get slokas for BAB",
        "parameters": [
          {
            "name": "bab",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sloka"
              }
            }
          }
        },
				"security": [
					{
						"Bearer": []
					}
				]
      }
    },
    "/api/gita/bab/{bab}/sloka/{sloka}": {
      "get": {
        "summary": "Get sloka by id",
        "parameters": [
          {
            "name": "bab",
            "in": "path",
            "required": true,
            "type": "integer",
						"description": "Nomor BAB",
						"example": "2"
          },
          {
            "name": "sloka",
            "in": "path",
            "required": true,
            "type": "integer" 
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Sloka"
            }
          }
        },
				"security": [
					{
						"Bearer": []
					}
				]
      }
    },
    "/api/gita/bab/{bab}/sloka/{sloka}/makna": {
      "get": {
        "summary": "Dapatkan makna dari sloka dan terjemahannya",
        "parameters": [
          {
            "name": "bab",
            "in": "path",
            "required": true,
            "type": "integer",
						"description": "Nomor BAB",
						"example": "2"
          },
          {
            "name": "sloka",
            "in": "path",
            "required": true,
            "type": "integer" 
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
							"properties": {
								"makna": {
									"type": "string",
									"example": "<Makna dari Sloka>"
								},
								"error": {
									"type": "boolean",
									"example": false
								}
							}
            }
          },
					"500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
							"properties": {
								"message": {
									"type": "string",
									"example": "Terjadi kesalahan. silahakan coba lagi."
								},
								"error": {
									"type": "boolean",
									"example": true
								}
							}
            }
          },
					"404": {
            "description": "Sloka not Found",
            "schema": {
              "type": "object",
							"properties": {
								"message": {
									"type": "string",
									"example": "Sloka not Found"
								},
								"error": {
									"type": "boolean",
									"example": true
								}
							}
            }
          }
        },
				"security": [
					{
						"Bearer": []
					}
				]
      }
    },
		"/api/user/register": {
      "post": {
        "summary": "Register a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string",
									"example": "User registered successfully"
								},
								"error": {
									"type": "boolean",
									"example": false
								}
							}
						}
          },
					"400": {
						"description": "Bad request",
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string",
									"example": "User already exists"
								},
								"error": {
									"type": "boolean",
									"example": true
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string",
									"example": "Something went wrong"
								},
								"error": {
									"type": "boolean",
									"example": true
								}
							}
						}
					}
        }
      }
    },
    "/api/user/login": {
      "post": {
        "summary": "Login a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
							"properties": {
								"email": {
									"type": "string",
									"example": "example@email.com"
								},
								"password": {
									"type": "string"
								}
							}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
								"message": {
									"type": "string",
									"example": "Success"
								},
								"error": {
									"type": "boolean",
									"example": false
								},
								"loginResult": {
									"type": "object",
									"properties": {
										"token": {
											"type": "string",
											"example": "<JWT TOKEN>"
										},
										"userId": {
											"type": "integer",
											"example": "2"
										},
										"name": {
											"type": "string",
											"example": "<Nama Pengguna>"
										}
									}
								}
              }
            }
          }
        }
      }
    },
    "/api/chat": {
      "post": {
        "summary": "Chat dengan Ganesh Bot",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
							"properties": {
								"message": {
									"type": "string",
									"example": "Berikan saya doa sebelum makan"
								}
							}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
								"text": {
									"type": "string",
									"example": "<Respon Ganesh Bot>"
								},
								"error": {
									"type": "boolean",
									"example": false
								}
              }
            }
          },
					"500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
								"text": {
									"type": "string",
									"example": "Terjadi kesalahan. silahakan coba lagi."
								},
								"error": {
									"type": "boolean",
									"example": true
								}
              }
            }
          }
        },
				"security": [
					{
						"Bearer": []
					}
				]
      }
    }
  },
  "definitions": {
    "BAB": {
      "type": "object",
      "properties": {
        "number": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "title_hindi": {
          "type": "string" 
        },
        "summary": {
          "type": "string"
        },
        "translation_indo": {
          "type": "string"
        }
      }
    },
    "Sloka": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "number": {
          "type": "integer"
        },
        "content": {
          "type": "string"
        },
        "translation_indo": {
          "type": "string"
        }
      }
    },
		"User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
					"example": "example@email.com"
        },
        "password": {
          "type": "string"
        },
				"name": {
					"type": "string"
				}
      }
    }
  },
	"securityDefinitions": {
		"Bearer": {
			"type": "apiKey",
			"name": "Authorization",
			"in": "header",
			"description": "JWT Authorization header using the Bearer scheme."
		}
	}
}
